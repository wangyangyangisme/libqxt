
/****************************************************************************
** Copyright (c) 2006 - 2011, the LibQxt project.
** See the Qxt AUTHORS file for a list of authors and copyright holders.
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are met:
**     * Redistributions of source code must retain the above copyright
**       notice, this list of conditions and the following disclaimer.
**     * Redistributions in binary form must reproduce the above copyright
**       notice, this list of conditions and the following disclaimer in the
**       documentation and/or other materials provided with the distribution.
**     * Neither the name of the LibQxt project nor the
**       names of its contributors may be used to endorse or promote products
**       derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
** ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
** DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
** DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
** (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
** LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
** ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
** SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
** <http://libqxt.org>  <foundation@libqxt.org>
*****************************************************************************/

/*!
    \class QxtNativeEventFilter
    \inmodule QxtGui
    \brief The QxtNativeEventFilter class provides a native event filter to
	access platform specific events.

    QxtNativeEventFilter provides access to platform specific native events
    without the need of subclassing QApplication.

    \bold {Note:} QxtNativeEventFilter requires QxtApplication.

    Example usage:
    \code
    qxtApp->installNativeEventFilter(myObject);

    class MyObject : public QxtNativeEventFilter {
        public:
            ...

            bool x11EventFilter(XEvent* event) {
                if (event->type == ...) {
                    ...
                }
                return false;
            }

            bool winEventFilter(MSG* msg, long* result) {
                if (msg->message == ...) {
                    ...
                }
                return false;
            }

            bool macEventFilter(EventHandlerCallRef caller, EventRef event) {
                if (GetEventClass(event) == ...) {
                    ...
                }
                return false;
            }
    };
    \endcode

    \sa QxtApplication::installNativeEventFilter()
 */

/*!
    \fn QxtNativeEventFilter::~QxtNativeEventFilter()

    Destructs the native event filter. The native event filter is
    automatically removed from the application.

    \sa QxtApplication::removeNativeEventFilter()
 */

/*!
    \fn QxtNativeEventFilter::x11EventFilter(XEvent* event)

    Filters X11 events if this object has been installed as a native event filter.
    The events are passed in the \a event parameter.

    In your reimplementation of this function, if you want to filter the event out,
    i.e. stop it being handled further, return \c true; otherwise return \c false.

    \sa QxtApplication::installNativeEventFilter()
 */

/*!
    \fn QxtNativeEventFilter::winEventFilter(MSG* msg, long* result)

    Filters Windows events if this object has been installed as a native event filter.
    The window messages are passed in the \a msg parameter and the return value of
    the window procedure can be set to the \a result parameter.

    In your reimplementation of this function, if you want to filter the event out,
    i.e. stop it being handled further, return \c true; otherwise return \c false.

    \sa QxtApplication::installNativeEventFilter()
 */

/*!
    \fn QxtNativeEventFilter::macEventFilter(EventHandlerCallRef caller, EventRef event)

    Filters Mac events if this object has been installed as a native event filter.
    The events are passed in the \a event parameter with the \a caller parameter.

    In your reimplementation of this function, if you want to filter the event out,
    i.e. stop it being handled further, return \c true; otherwise return \c false.

    \sa QxtApplication::installNativeEventFilter()
 */





















